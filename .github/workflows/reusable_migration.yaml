name: Reusable migration
on:
  workflow_call:
    inputs:
      s3_backend_key:
        type: string
        required: true
      s3_backend_bucket:
        type: string
        required: true
      s3_backend_region:
        type: string
        required: true
      tfe_backend_workspace:
        type: string
        required: true
      tfe_backend_organization:
        type: string
        required: false
        default: bialik-magdalena

jobs:
  migrate:
    name: Migrate state
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.s3_backend_region }}
      - name: Terraform setup
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Initialize TFE Backend
        env:
          tfe_backend_workspace: ${{ inputs.tfe_backend_workspace }}
          tfe_backend_organization: ${{ inputs.tfe_backend_organization }}
        run: |
          mkdir migration && cd migration
          cat > migration.tf <<EOL
          terraform {
            backend "remote" {
              organization = "$tfe_backend_organization"
              workspaces {
                name = "$tfe_backend_workspace"
              }
            }
          }
          EOL
          terraform init

      - name: Initialize S3 Backend
        env:
          s3_backend_key: ${{ inputs.s3_backend_key }}
          s3_backend_bucket: ${{ inputs.s3_backend_bucket }}
          s3_backend_region: ${{ inputs.s3_backend_region }}
        run: |

          cd migration
          cat > migration.tf <<EOL
          terraform {
            backend "s3" {
              key            = "$s3_backend_key"
              bucket         = "$s3_backend_bucket"
              region         = "$s3_backend_region"
            }
          }
          EOL
          terraform init -migrate-state -force-copy

#      - name: Initialize TFE Backend
#        env:
#          tfe_backend_workspace: ${{ inputs.tfe_backend_workspace }}
#          tfe_backend_organization: ${{ inputs.tfe_backend_organization }}
#        run: |
#          cd migration
#          cat > migration.tf <<EOL
#          terraform {
#            backend "remote" {
#              organization = "$tfe_backend_organization"
#              workspaces {
#                name = "$tfe_backend_workspace"
#              }
#            }
#          }
#          EOL
#          terraform init -migrate-state -force-copy
